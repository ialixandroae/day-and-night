{"version":3,"sources":["helpers/helpers.js","store/store.js","components/controller/Controller.js","components/map/Map.js","components/scene/Scene.js","components/main/Main.js","App.js","serviceWorker.js","index.js"],"names":["GST","Time","date","_date","Date","_utc","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","_getUTCArray","_jd","julian_day","Math","floor","transition_offset","tmp","Number","timezone","getTimezoneOffset","jd","gmst","rad","PI","time_in_sec","t","gmst_at_zero","e","omega","long1","long2","sin","cos","Terminator","option","shade","boundary","Storage","_getSunPosition","time","time_in_day","mean_longitude","mean_anomaly","eccentricity","equation","nao","angle","true_longitude","true_anomary","radius","nutation","L0","L1","obliquity","longitude","ra","atan2","dec","asin","distance","x","y","z","_getTerminator","night_array","sun","sun_ra","sun_dec","sun_long","sun_lat","polar_night_flag","NightCircle","start","end","rev","lat_array","lng_array","i","delta_lat","abs","delta_long","push","reverse","latitude_array_east","qtr","longitude_array_east","concat","latitude_array_west","longitude_array_west","latitude_array","longitude_array","_generateArray","splitted_array","trm","array_length","length","start_lng","last_lng","first_split_point","last_split_point","split_latitude","lat1","lng1","lat2","lng2","split_lng","offset","splitted_lng_array","splitted_lat_array","split_latlng_array","split_count","next","sp","spl_lat","split_point","sp_length","last_lat","unshift","splitArray","lat_limit","_nightPathFactory","start_lat","polygon","polyline","lng_array_length","lat_array_length","true_lng","pop","shift","night_polygon_array","night_polyline_array","al","j","p","_removeTerminator","data_length","NightPorigon","setMap","NightBoundaryPolyline","get","remove","update","wrap","lat","lon","point","pole","getTimeExtent","now","setDate","moment","tomorrow","add","endOf","toDate","yesterday","subtract","startOf","generateCones","graphicsLayer","opacity","a","loadModules","css","Graphic","Polygon","geodesicUtils","normalizeUtils","webMercatorUtils","map","paths","coord","forEach","path","rings","simpleFillSymbol","type","color","outline","width","geom","geodesicDensify","mercatorPolygon","geographicToWebMercator","normalizeCentralMeridian","geom2","polygonGraphic","geometry","symbol","initialState","store","createContext","Provider","StateProvider","children","useReducer","state","action","data","Error","dispatch","value","Header","Layout","Content","Footer","Controller","view","daylightRef","useRef","useState","timeSlider","setTimeSlider","useEffect","TimeSlider","container","current","loop","layout","mode","timeVisible","stops","interval","unit","fullTimeExtent","timeExtent","watch","loadWidgets","className","ref","xs","span","sm","md","lg","xl","onChange","defaultValue","screenName","options","showCount","MapView","globalState","useContext","mapRef","mapView","setView","setGraphicsLayer","Map","GraphicsLayer","Expand","basemap","zoom","node","document","createElement","ReactDOM","render","expand","content","ui","loadWebScene","removeAll","recreateCones","style","height","SceneView","sceneRef","sceneView","BasemapGallery","basemapGallery","Main","gutter","App","Boolean","window","location","hostname","match","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0RAYIA,EAAMA,GAAO,GAEjBA,EAAIC,KACFD,EAAIC,MACJ,SAAUC,GACR,GAAKA,EAGCC,EAAQD,OAFZ,IAAIC,EAAQ,IAAIC,KAKlB,IAWIC,EAXe,SAAUF,GAC3B,MAAO,CACLG,KAAMH,EAAMI,iBACZC,MAAOL,EAAMM,cAAgB,EAC7BC,IAAKP,EAAMQ,aACXC,MAAOT,EAAMU,cACbC,QAASX,EAAMY,gBACfC,QAASb,EAAMc,iBAIRC,CAAaf,GAEpBgB,EAAM,WACR,IAAIb,EAAOD,EAAKC,KACZE,EAAQH,EAAKG,MACbE,EAAML,EAAKK,IAGf,GAAIF,GAAS,EACPF,EAAOA,EAAO,EACdE,EAAQA,EAAQ,GAGtB,IAAIY,EACFC,KAAKC,MAAM,QAAUhB,EAAO,OAC5Be,KAAKC,MAAM,SAAWd,EAAQ,IAC9BE,EACA,OAOK,GAAIU,EAAa,UACtB,IAAIG,EAAoB,MAExB,KAAIC,EACAD,EAAoB,GADpBC,EAAMH,KAAKC,MAAMhB,EAAO,MACMe,KAAKC,MAAME,EAAM,GAGrD,OADSJ,EAAaG,GAgDxB,MAAO,CACLrB,KAAMC,EACNG,KAAMmB,OAAOpB,EAAKC,MAClBE,MAAOiB,OAAOpB,EAAKG,OACnBE,IAAKe,OAAOpB,EAAKK,KACjBE,MAAOa,OAAOpB,EAAKO,OACnBE,QAASW,OAAOpB,EAAKS,SACrBE,QAASS,OAAOpB,EAAKW,SACrBU,SAAUvB,EAAMwB,oBAAsB,GACtCC,GAAIT,EACJU,KAvDU,WACV,IAAIC,EAAMT,KAAKU,GAAK,IAChBC,EAA2B,KAAb3B,EAAKO,MAA8B,GAAfP,EAAKS,QAAeT,EAAKW,QAG3DiB,GAFKd,IAEK,SAAa,MACvBe,GACD,WACC,eAAiBD,EACjB,QAAWA,EAAIA,EACf,MAAYA,EAAIA,EAAIA,GACtB,KACEC,EAAe,KACjBA,GAA8B,IAGhC,IAAIL,EAAOK,EAA8B,cAAdF,EAA+B,KAEtDG,EACF,kBAGC,OAAS,KAAQF,EACjB,MAAU,KAAQA,EAAIA,EACtB,QAAW,KAAQA,EAAIA,EAAIA,EAE1BG,EACF,UAAY,YAAcH,EAAI,SAAYA,EAAIA,EAAKA,EAAIA,EAAIA,EAAK,KAC9DI,EAAQ,SAAW,WAAaJ,EAChCK,EAAQ,SAAW,YAAcL,EAarC,OAPAJ,KAJG,KAAOR,KAAKkB,IAAIH,EAAQN,KACxB,KAAOT,KAAKkB,IAAI,EAAIF,EAAQP,GAC7B,IAAOT,KAAKkB,IAAI,EAAID,EAAQR,GAC5B,IAAOT,KAAKkB,IAAI,EAAIH,EAAQN,IACP,GAAMT,KAAKmB,IAAIL,EAAIL,GAAQ,MACvC,IACTD,EAAQA,EAAO,GAAM,IAEnBA,EAAO,KACTA,GAAc,IAETA,KAkBb7B,EAAIyC,WAAa,SAAUC,GACzB,IAAIC,EAAQD,EAAOC,MACfC,EAAWF,EAAOE,SACtB5C,EAAI6C,QAAU7C,EAAI6C,SAAW,GAC7B7C,EAAI6C,QAAQJ,WAAazC,EAAI6C,QAAQJ,YAAc,GACnD,IAAIX,EAAMT,KAAKU,GAAK,IAahBe,EAAkB,SAAUC,GAC9B,IAAIC,EACFD,EAAKnC,MAAQ,GAAKmC,EAAKjC,QAAU,KAAOiC,EAAK/B,QAAU,MAErDiB,GADKc,EAAKnB,KAAOoB,EACP,SAAa,MAEvBC,EAAiB,UAAY,YAAchB,EAAI,QAAYA,EAAIA,EAE/DiB,EAAe,UAAY,YAAcjB,EAAI,QAAYA,EAAIA,EAE7DkB,EAAe,WAAc,SAAclB,EAAI,SAAeA,EAAIA,EAElEmB,GACD,SAAW,QAAWnB,EAAI,MAAWA,EAAIA,GAC1CZ,KAAKkB,IAAIW,EAAepB,GAC1BsB,IAAa,QAAW,OAAWnB,GAAKZ,KAAKkB,IAAI,EAAIW,EAAepB,GAGpE,IAwCIuB,EArEsBC,EA6BtBC,EAAiBN,GAFrBG,GAAY,OAAW/B,KAAKkB,IAAI,EAAIW,EAAepB,IAI/C0B,EAAeN,EAAeE,EAE9BK,EACD,aAAe,EAAIN,EAAeA,IAClC,EAAIA,EAAe9B,KAAKmB,IAAIgB,EAAe1B,IAmC1C4B,GADAL,EAAM,IAhCNA,EAAM,SAAUpB,GAClB,IAAIG,GACD,UACC,YAAcH,EACd,SAAYA,EAAIA,GACfA,EAAIA,EAAIA,GAAK,MAChBH,EACE6B,GAAM,SAAW,WAAa1B,GAAKH,EACnC8B,GAAM,SAAW,YAAc3B,GAAKH,EAmBxC,MAAO,CACL4B,UAlBE,KAAO,KAAQrC,KAAKkB,IAAIH,KACxB,KAAO,KAAQf,KAAKkB,IAAI,EAAIoB,GAC7B,IAAO,KAAQtC,KAAKkB,IAAI,EAAIqB,GAC3B,IAAO,KAAQvC,KAAKkB,IAAI,EAAIH,GAAUN,EAgBxC+B,UAdA,kBAGC,OAAS,KAAQ5B,EACjB,MAAU,KAAQA,EAAIA,EACtB,QAAW,KAAQA,EAAIA,EAAIA,GAE3B,IAAM,KAAQZ,KAAKmB,IAAIJ,GACvB,IAAO,KAAQf,KAAKmB,IAAI,EAAImB,GAC5B,GAAM,KAAQtC,KAAKmB,IAAI,EAAIoB,GAC3B,IAAO,KAAQvC,KAAKmB,IAAI,EAAIJ,OAOfH,IACCyB,SACfG,EAAYR,EAAIQ,UAEhBC,EADqBP,EAAiBG,EAItCK,EAAK1C,KAAK2C,MACZ3C,KAAKmB,IAAIqB,EAAY/B,GAAOT,KAAKkB,IAAIuB,EAAYhC,GACjDT,KAAKmB,IAAIsB,EAAYhC,KA9EGwB,EAgFTS,EAAKjC,GA/EV,IACVwB,GAAgB,IAEhBA,EADSA,EAAQ,EACRA,EAAQ,IAAO,IAEhBA,EA0EVS,EAxEOT,EAwEsB,GAE7B,IAAIW,EAAM5C,KAAK6C,KAAK7C,KAAKkB,IAAIsB,EAAY/B,GAAOT,KAAKkB,IAAIuB,EAAYhC,IAEjEqC,EAAoB,UAATV,EAKf,MAAO,CACLM,GAAIA,EACJE,IARFA,GAAYnC,EASVqC,SAAUA,EACVC,EAPMD,EAAW9C,KAAKmB,IAAIsB,EAAYhC,GAQtCuC,EAPMF,GAAY9C,KAAKkB,IAAIuB,EAAYhC,GAAOT,KAAKmB,IAAIqB,EAAY/B,IAQnEwC,EAPMH,GAAY9C,KAAKkB,IAAIuB,EAAYhC,GAAOT,KAAKkB,IAAIsB,EAAY/B,MAoNnEyC,EAAiB,SAAUxB,GAC7B,IAAIyB,EA1Me,SAAUzB,GAC7B,IAAIjB,EAAMT,KAAKU,GAAK,IAChB0C,EAAM3B,EAAgBC,GACtB2B,EAASD,EAAIV,GACbY,EAAUF,EAAIR,IAEdW,IAAoB,GADb7B,EAAKlB,OACsB,GAAT6C,GACzBE,EAAW,MACbA,GAAsB,KAEpBA,EAAW,IACbA,EAAYA,EAAW,IAAO,KAEhC,IAAIC,EAAUF,EAEd,GAAIE,EAAU,EACZ,IAAIC,EAAmB,aAClB,GAAID,GAAW,EAChBC,EAAmB,aAEnBA,EAAmB,OAGzB,IAAIC,EAAc,SAAUC,EAAOC,EAAKC,GAGtC,IAFA,IAAIC,EAAY,GACZC,EAAY,GACPC,EAAIL,EAAOK,GAAKJ,EAAKI,GAAK,EAAG,CACpC,IAAIC,EACFjE,KAAK6C,KAAK7C,KAAKmB,IAAIqC,EAAU/C,GAAOT,KAAKkB,IAAI8C,EAAIvD,IAAQA,EAC3D,GAAIT,KAAKkE,IAAID,GAAa,GAAI,CAC5B,IAAIlB,GACD/C,KAAKmB,IAAIoC,EAAW9C,GACnBT,KAAKkB,IAAIsC,EAAU/C,GACnBT,KAAKkB,IAAI8C,EAAIvD,GACfT,KAAKkB,IAAIqC,EAAW9C,GAAOT,KAAKmB,IAAI6C,EAAIvD,GACtCuC,GACDhD,KAAKkB,IAAIqC,EAAW9C,GACnBT,KAAKkB,IAAIsC,EAAU/C,GACnBT,KAAKkB,IAAI8C,EAAIvD,GACfT,KAAKmB,IAAIoC,EAAW9C,GAAOT,KAAKmB,IAAI6C,EAAIvD,GACtC0D,EAAanE,KAAK2C,MAAMK,EAAGD,GAAKtC,EAChC0D,EAAa,MACfA,GAA0B,KAExBA,EAAa,IACfA,EAAcA,EAAa,IAAO,KAEpCL,EAAUM,KAAKH,GACfF,EAAUK,KAAKD,IAGnB,OAAW,GAAPN,EACK,CACLC,UAAWA,EAAUO,UACrBN,UAAWA,EAAUM,WAGhB,CACLP,UAAWA,EACXC,UAAWA,IAKbO,GADAC,EAAMb,EAAY,EAAG,IAAI,IACCI,UAC1BU,EAAuBD,EAAIR,UAE3BQ,EAAMb,EAAY,IAAK,KAAK,GAChCY,EAAsBA,EAAoBG,OAAOF,EAAIT,WACrDU,EAAuBA,EAAqBC,OAAOF,EAAIR,WAEvD,IACIW,GADAH,EAAMb,EAAY,GAAI,KAAK,IACDI,UAC1Ba,EAAuBJ,EAAIR,UAE3BQ,EAAMb,EAAY,IAAK,KAAK,GAahC,OAZAgB,EAAsBA,EAAoBD,OAAOF,EAAIT,WACrDa,EAAuBA,EAAqBF,OAAOF,EAAIR,WAEnDP,EAAU,GACZkB,EAAoBL,UACpBM,EAAqBN,WACZb,EAAU,IACnBc,EAAoBD,UACpBG,EAAqBH,WAIhB,CACLO,eAHmBN,EAAoBG,OAAOC,GAI9CG,gBAHoBL,EAAqBC,OAAOE,GAIhDlB,iBAAkBA,GA+GFqB,CAAepD,GAC7BqD,EA5GW,SAAU5B,GACzB,IAAI6B,EAAM7B,EACNY,EAAYiB,EAAIH,gBAChBf,EAAYkB,EAAIJ,eAChBK,EAAelB,EAAUmB,OACzBC,EAAYpB,EAAU,GACtBqB,EAAWrB,EAAUkB,EAAe,GAGxC,GAAIE,EAFa,IAGXE,EAHW,GAIbrF,KAAKC,MAAMkF,EAJE,SAKU,IACvBE,EAAoB,UAGtB,IAAIA,EATW,GAWjB,IAAIC,EAXa,GAYftF,KAAKC,MAAMmF,EAZI,OAcbG,EAAiB,SAAUC,EAAMC,EAAMC,EAAMC,EAAMC,GACrD,GAAiB,KAAbA,EACF,IAAIC,EAAS,SAETA,EAAS,EAIf,OADEL,GAA8BE,EAAOF,IAASG,EAAOE,EAASJ,IAAtDG,EAAYH,IAIpBK,EAAqB,GACrBC,EAAqB,GAErBC,EAAqB,SAAUrC,EAAOC,EAAKqC,EAAaC,GAC1D,IAAK,IAAIC,EAAKxC,EAAOwC,GAAMvC,EAAKuC,GA7BjB,GA6BuC,CACpDL,EAAmBG,GAAe,GAClCF,EAAmBE,GAAe,GAClC,IAAK,IAAIjC,EAAIkC,EAAMlC,EAAIiB,EAAcjB,IAAK,CACxC,KAAImC,EAAKpC,EAAUC,IAAMmC,EAjCd,GAiCgCpC,EAAUC,IAG9C,CACL,IAAIoC,EAAUb,EACZzB,EAAUE,EAAI,GACdD,EAAUC,EAAI,GACdF,EAAUE,GACVD,EAAUC,GACVmC,GAEFL,EAAmBG,GAAa7B,KAAK+B,GACrCJ,EAAmBE,GAAa7B,KAAKgC,GACrCF,EAAOlC,EACPiC,IACA,MAdAH,EAAmBG,GAAa7B,KAAKL,EAAUC,IAC/C+B,EAAmBE,GAAa7B,KAAKN,EAAUE,KAiBrD,MAAO,CACL8B,mBAAoBA,EACpBC,mBAAoBA,EACpBM,YAAaF,EACbF,YAAaA,EACbC,KAAMA,IAIV,GAAIf,EAAYC,EACd,IAAIe,EAAK,IAAIH,EACXX,EACAC,EACA,EACA,OAEG,CACDa,EAAK,IAAIH,EAAmBX,EAAmB,IAAK,EAAG,GAC3Dc,EAAK,IAAIH,EAtEM,GAwEbV,EACAa,EAAGF,YACHE,EAAGD,MAIHJ,EAAqBK,EAAGL,mBACxBC,EAAqBI,EAAGJ,mBAG5B,IAJA,IAGIO,EAAYR,EAAmBZ,OAC1BlB,EAAI,EAAGA,EAAIsC,EAAWtC,IAAK,CAC9BoB,EACFU,EAAmB9B,EAAI,GAAG8B,EAAmB9B,EAAI,GAAGkB,OAAS,GAD/D,IAEIqB,EACFR,EAAmB/B,EAAI,GAAG+B,EAAmB/B,EAAI,GAAGkB,OAAS,GAC/C,KAAZE,IACFA,EAAW,GAEbU,EAAmB9B,GAAGwC,QAAQpB,GAC9BW,EAAmB/B,GAAGwC,QAAQD,GAEhC,MAAO,CACLT,mBAAoBA,EACpBC,mBAAoBA,GAMDU,CAAWtD,GAC5B2C,EAAqBf,EAAee,mBACpCC,EAAqBhB,EAAegB,mBACpCtC,EAAmBN,EAAYM,iBAGnC,GAAwB,SAApBA,EACF,IAAIiD,EAAY,QACX,GAAwB,SAApBjD,EACLiD,GAAa,GAoDnB,IAjDA,IAAIC,EAAoB,SAAU5C,EAAWD,EAAW8C,GACtD,IAAIC,EAAU,GACVC,EAAW,GACXC,EAAmBhD,EAAUmB,OAC7B8B,EAAmBlD,EAAUoB,OACjC,GAAInB,EAAU,GAAK,IACjB,IAAIkD,EAAWlD,EAAU,GAAK,SAE1BkD,EAAWlD,EAAU,GAM3B,GAJIkD,EAAW,IACbnD,EAAUO,UACVN,EAAUM,WAER0C,EAAmB,EAAG,CACA,QAApBtD,GACFoD,EAAQzC,KAAK,CAACsC,EAAW3C,EAAU,KAErC8C,EAAQzC,KAAK,CAACwC,EAAW7C,EAAU,KACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIgD,EAAkBhD,IACpC6C,EAAQzC,KAAK,CAACN,EAAUE,GAAID,EAAUC,KACtC8C,EAAS1C,KAAK,CAACN,EAAUE,GAAID,EAAUC,KAEzC6C,EAAQzC,KAAK,CAACwC,EAAW7C,EAAUgD,EAAmB,KAE9B,QAApBtD,GACFoD,EAAQzC,KAAK,CAACsC,EAAW3C,EAAUgD,EAAmB,KAExDF,EAAQzC,KAAKyC,EAAQ,IAEnB/C,EAAUkD,EAAmB,IAAMlD,EAAUkD,EAAmB,IAChEjD,EAAUgD,EAAmB,IAAMhD,EAAUgD,EAAmB,IAEhED,EAASI,MAEPpD,EAAU,IAAMA,EAAU,IAAMC,EAAU,IAAMA,EAAU,IAC5D+C,EAASK,QAGb,MAAO,CACLN,QAASA,EACTC,SAAUA,IAIVM,EAAsB,GACtBC,EAAuB,GACvBT,EAAYb,EAAmB,GAAG,GAClCuB,EAAKxB,EAAmBZ,OACnBqC,EAAI,EAAGA,EAAID,EAAIC,IAAK,CAC3B,IAAIC,EAAI,IAAIb,EACVb,EAAmByB,GACnBxB,EAAmBwB,GACnBX,GAEFQ,EAAoBG,GAAKC,EAAEX,QAC3BQ,EAAqBE,GAAKC,EAAEV,SAE9B,OAAIxF,EACK8F,EAgBL7F,EACK8F,OADT,GAgBEI,EAAoB,WACtB,GAAInG,EACF,IACE,IAAI0C,EAAI,EAAG0D,EAAc/I,EAAI6C,QAAQmG,aAAazC,OAClDlB,EAAI0D,EACJ1D,IAEArF,EAAI6C,QAAQmG,aAAa3D,GAAG4D,OAAO,MAGvC,GAAIrG,EACF,IACMyC,EAAI,EAAG0D,EAAc/I,EAAI6C,QAAQqG,sBAAsB3C,OAC3DlB,EAAI0D,EACJ1D,IAEArF,EAAI6C,QAAQqG,sBAAsB7D,GAAG4D,OAAO,OAKlD,MAAO,CACLE,IAAK,SAAUjJ,GACb,IAAI6C,EAAO,IAAI/C,EAAIC,KAAKC,GACxB,OAAOqE,EAAexB,IAExBqG,OAAQ,WACNN,KAEFO,OAAQ,SAAUnJ,GAChB4I,IACA,IAAI/F,EAAO,IAAI/C,EAAIC,KAAKC,GACxB,OAAOqE,EAAexB,MAK5B,IAwBMuG,EAAO,SAACC,EAAKC,GACjB,IAAIC,EAAQ,CAAEF,IAAKA,EAAKC,IAAKA,GAEzBE,EAAOH,EAAM,EAAI,IAAM,GACvBrC,EAASqC,EAAM,GAEnB,OAJelI,KAAKC,MAAMD,KAAKkE,IAAIgE,GAAO,IAAM,GAK9C,KAAK,EACHE,EAAMF,IAAMrC,EACZ,MACF,KAAK,EACHuC,EAAMF,IAAMG,EAAOxC,EACnBuC,EAAMD,KAAO,IACb,MACF,KAAK,EACHC,EAAMF,KAAOrC,EACbuC,EAAMD,KAAO,IACb,MACF,KAAK,EACHC,EAAMF,KAAOG,EAAOxC,EAQxB,OAJIuC,EAAMD,IAAM,KAAOC,EAAMD,KAAO,OAClCC,EAAMD,KAA6C,IAAtCnI,KAAKC,OAAOmI,EAAMD,IAAM,KAAO,MAGvC,CAACC,EAAMD,IAAKC,EAAMF,MAGrBI,EAAgB,SAACC,GACrB,IAAMC,EAAUC,IAAOF,GAIvB,MAAO,CACLG,SAJeF,EAAQG,IAAI,EAAG,OAAOC,MAAM,OAAOC,SAKlDC,UAJgBN,EAAQO,SAAS,EAAG,OAAOC,QAAQ,OAAOH,WAQxDI,EAAa,uCAAG,WAAOV,EAAKW,EAAeC,GAA3B,2BAAAC,EAAA,sEAEZC,sBACJ,CACE,eACA,wBACA,sCACA,uCACA,0CAEF,CACEC,KAAK,IAXS,mCACbC,EADa,KACJC,EADI,KACKC,EADL,KACoBC,EADpB,KACoCC,EADpC,KAjEC9K,EAgFY0J,EA3Ed,IAAI5J,EAAIyC,WAJA,CACzBE,OAAO,EACPC,UAAU,IAIoBuG,IAAIjJ,GAEhB+K,KAAI,SAACC,GACvB,OAAOA,EAAMD,KAAI,SAACE,GAAD,OAAW7B,EAAK6B,EAAM,GAAIA,EAAM,UAwExCC,QAAX,uCAAmB,WAAOC,GAAP,yBAAAZ,EAAA,6DACXvC,EAAU,IAAI2C,EAAQ,CAC1BS,MAAOD,IAGHE,EAAmB,CACvBC,KAAM,cACNC,MAAO,CAAC,EAAG,EAAG,EAAGjB,GACjBkB,QAAS,CACPD,MAAO,CAAC,EAAG,EAAG,EAAGjB,GACjBmB,MAAO,IAIPC,EAAOd,EAAce,gBAAgB3D,EAAS,KAC5C4D,EAAkBd,EAAiBe,wBAAwBH,GAfhD,SAiBGb,EAAeiB,yBACjCF,GAlBe,OAiBXG,EAjBW,OAqBXC,EAAiB,IAAItB,EAAQ,CACjCuB,SAAUF,EAAM,GAChBG,OAAQb,IAEVhB,EAAcP,IAAIkC,GAzBD,2CAAnB,uDAjBoB,kCAjEA,IAAChM,IAiED,OAAH,0D,QC9nBbmM,EAAe,CACnBnM,KAAM,IAAIE,MAENkM,EAAQC,wBAAcF,GACpBG,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,sBAAW,SAACC,EAAOC,GAC3C,OAAQA,EAAOrB,MACb,IAAK,WACH,OAAO,2BAAKoB,GAAZ,IAAmB1M,KAAM2M,EAAOC,OAClC,QACE,MAAM,IAAIC,SAEbV,GARmC,mBAC/BO,EAD+B,KACxBI,EADwB,KAUtC,OAAO,kBAACR,EAAD,CAAUS,MAAO,CAAEL,QAAOI,aAAaN,I,iBCVxCQ,G,MAA4BC,IAA5BD,QAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OA0GVC,EAzFI,SAAC,GAA6B,IAA3BN,EAA0B,EAA1BA,SAAUO,EAAgB,EAAhBA,KAAM3D,EAAU,EAAVA,IAC9B4D,EAAcC,mBAD0B,EAEZC,mBAAS,MAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KA4C9C,OAzCAC,qBAAU,WAAM,4CAEd,sCAAApD,EAAA,sEAC6BC,sBAAY,CAAC,2BAA4B,CAClEC,KAAK,IAFT,mCACSmD,EADT,OAIkCnE,EAAcC,GAAtCG,EAJV,EAIUA,SAAUI,EAJpB,EAIoBA,WAIlBwD,EAAa,IAAIG,EAAW,CAC1BP,KAAMA,EACNQ,UAAWP,EAAYQ,QACvBC,MAAM,EACNC,OAAQ,UACRC,KAAM,UACNC,aAAa,EACbC,MAAO,CACLC,SAAU,CACRrB,MAAO,EACPsB,KAAM,UAGVC,eAAgB,CACdxJ,MAAOmF,EACPlF,IAAK8E,GAEP0E,WAAY,CACVzJ,MAAO4E,EACP3E,IAAK2E,MAIE8E,MAAM,cAAc,SAACD,GAC9BzB,EAAS,CAAExB,KAAM,WAAYsB,KAAM,IAAI1M,KAAKqO,EAAWzJ,YAEzD4I,EAAcD,GAlChB,6CAFc,0DAsCdgB,KACC,IAGD,oCACE,kBAAC,IAAD,KACE,kBAACzB,EAAD,CAAQ0B,UAAU,eAAlB,iBACA,kBAAC,IAAD,KACE,kBAACxB,EAAD,KACE,yBAAKyB,IAAKrB,MAGd,kBAACH,EAAD,KACE,kBAAC,IAAD,CAAKuB,UAAU,UACb,kBAAC,IAAD,CACEE,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAM,IACZG,GAAI,CAAEH,KAAM,IACZI,GAAI,CAAEJ,KAAM,KAEZ,kBAAC,IAAD,CACEK,SAAU,SAAClP,GAAD,OA9ET,SAACA,EAAMyN,EAAYX,GAClC,GAAa,OAAT9M,EAAe,CAAC,IAAD,EACeyJ,EAAczJ,EAAKgK,UAA3CH,EADS,EACTA,SAAUI,EADD,EACCA,UAClBwD,EAAWa,eAAiB,CAC1BxJ,MAAOmF,EACPlF,IAAK8E,GAEP4D,EAAWc,WAAa,CACtBzJ,MAAO9E,EAAKgK,SACZjF,IAAK/E,EAAKgK,UAEZ8C,EAAS,CAAExB,KAAM,WAAYsB,KAAM5M,EAAKgK,YAmERkF,CAASlP,EAAMyN,EAAYX,IAC/C4B,UAAU,2BACVS,aAAcvF,SAGlB,kBAAC,IAAD,CACEgF,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAM,IACZG,GAAI,CAAEH,KAAM,IACZI,GAAI,CAAEJ,KAAM,KAEZ,yBAAKH,UAAU,+BACb,kBAAC,IAAD,CACEU,WAAY,eACZC,QAAS,CAAEC,WAAW,YCjG3BC,EAAU,WACrB,IAAMC,EAAcC,qBAAWrD,GACvBU,EAAa0C,EAAb1C,SAEF4C,EAASnC,mBAJY,EAKAC,mBAAS,MALT,mBAKpBmC,EALoB,KAKXC,EALW,OAMapC,mBAAS,MANtB,mBAMtBnD,EANsB,KAMPwF,EANO,KAQrBnG,EAAM8F,EAAY9C,MAAM1M,KAmE9B,OAjEA2N,qBAAU,WAAM,4CAEd,8CAAApD,EAAA,sEACsDC,sBAClD,CACE,WACA,qBACA,4BACA,uBAEF,CACEC,KAAK,IATX,0CACSqF,EADT,KACcP,EADd,KACuBQ,EADvB,KACsCC,EADtC,KAaE3F,EAAgB,IAAI0F,EAbtB,UAeQ3F,EAAcV,EAAKW,EAAe,IAf1C,eAiBQU,EAAM,IAAI+E,EAAI,CAClBG,QAAS,iBAEPnG,IAAIO,GAEFgD,EAAO,IAAIkC,EAAQ,CACvB1B,UAAW6B,EAAO5B,QAClB/C,IAAKA,EACLmF,KAAM,IAGJC,EAAOC,SAASC,cAAc,OAClCC,IAASC,OACP,kBAAC,EAAD,CAAYzD,SAAUA,EAAUO,KAAMA,EAAM3D,IAAKA,IACjDyG,GAGEK,EAAS,IAAIR,EAAO,CACtB3C,KAAMA,EACNoD,QAASN,IAEX9C,EAAKqD,GAAG5G,IAAI0G,EAAQ,aAEpBZ,EAAQvC,GACRwC,EAAiBxF,GAzCnB,mBA2CS,WACDgD,IAEFA,EAAKQ,UAAY,SA9CvB,6CAFc,0DAoDd8C,KACC,IAEHhD,qBAAU,WACR,GAAIgC,EAAS,6CAEX,sBAAApF,EAAA,sEACQH,EAAcoF,EAAY9C,MAAM1M,KAAMqK,EAAe,IAD7D,4CAFW,sBACXA,EAAcuG,YADH,mCAKXC,MAED,CAACrB,EAAY9C,MAAM1M,OAEf,yBAAK8Q,MAAO,CAAEC,OAAQ,OAAQtF,MAAO,QAAUkD,IAAKe,KC7EhDsB,EAAY,WACvB,IAAMxB,EAAcC,qBAAWrD,GAEzB6E,EAAW1D,mBAHY,EAIAC,mBAAS,MAJT,mBAItB0D,EAJsB,KAIXtB,EAJW,OAKWpC,mBAAS,MALpB,mBAKxBnD,EALwB,KAKTwF,EALS,KAOvBnG,EAAM8F,EAAY9C,MAAM1M,KAiE9B,OA/DA2N,qBAAU,WAAM,4CAEd,gDAAApD,EAAA,sEAEUC,sBACJ,CACE,WACA,uBACA,4BACA,sBACA,+BAEF,CACEC,KAAK,IAXb,0CACSqF,EADT,KACckB,EADd,KACyBjB,EADzB,KACwCC,EADxC,KACgDmB,EADhD,KAeE9G,EAAgB,IAAI0F,EAftB,UAgBQ3F,EAAcV,EAAKW,EAAe,IAhB1C,eAkBQU,EAAM,IAAI+E,EAAI,CAClBG,QAAS,eAEPnG,IAAIO,GAEFgD,EAAO,IAAI2D,EAAU,CACzBnD,UAAWoD,EAASnD,QACpB/C,IAAKA,IAGP6E,EAAQvC,GACRwC,EAAiBxF,GAEb+G,EAAiB,IAAID,EAAe,CACtC9D,KAAMA,IAGJmD,EAAS,IAAIR,EAAO,CACtB3C,KAAMA,EACNoD,QAASW,IAEX/D,EAAKqD,GAAG5G,IAAI0G,EAAQ,aAvCtB,mBAyCS,WACDnD,IAEFA,EAAKQ,UAAY,SA5CvB,6CAFc,0DAkDd8C,KACC,IAEHhD,qBAAU,WACR,GAAIuD,EAAW,6CAEb,sBAAA3G,EAAA,sEACQH,EAAcoF,EAAY9C,MAAM1M,KAAMqK,EAAe,IAD7D,4CAFa,sBACbA,EAAcuG,YADD,mCAKbC,MAED,CAACrB,EAAY9C,MAAM1M,OAEf,yBAAK8Q,MAAO,CAAEC,OAAQ,OAAQtF,MAAO,QAAUkD,IAAKsC,KCvErD/D,G,OAAYD,IAAZC,SAiCOmE,MA/Bf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKC,OAAQ,CAAC,EAAG,IACf,kBAAC,IAAD,CACE1C,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAM,IACZG,GAAI,CAAEH,KAAM,IACZI,GAAI,CAAEJ,KAAM,IACZH,UAAU,WAEV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CACEE,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IACZE,GAAI,CAAEF,KAAM,IACZG,GAAI,CAAEH,KAAM,IACZI,GAAI,CAAEJ,KAAM,IACZH,UAAU,YAEV,kBAAC,EAAD,W,OCnBG6C,MARf,WACE,OACE,yBAAK7C,UAAU,OACb,kBAAC,EAAD,QCKc8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNtB,IAASC,OACP,kBAAC,IAAMsB,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJzB,SAAS0B,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.8845801b.chunk.js","sourcesContent":["import moment from 'moment';\nimport { loadModules } from 'esri-loader';\n\n///////\n// originally from: http://www.lizard-tail.com/isana/lab/astro_calc/terminator.js\n// perhaps a better one here: https://github.com/kaktus621/google-maps-api-addons/tree/master/daynightoverlay\n///////\n\n///////\n// originally from: http://www.lizard-tail.com/isana/lab/astro_calc/terminator.js\n// perhaps a better one here: https://github.com/kaktus621/google-maps-api-addons/tree/master/daynightoverlay\n//\nvar GST = GST || {};\n\nGST.Time =\n  GST.Time ||\n  function (date) {\n    if (!date) {\n      var _date = new Date();\n    } else {\n      var _date = date;\n    }\n\n    var _getUTCArray = function (_date) {\n      return {\n        year: _date.getUTCFullYear(),\n        month: _date.getUTCMonth() + 1,\n        day: _date.getUTCDate(),\n        hours: _date.getUTCHours(),\n        minutes: _date.getUTCMinutes(),\n        seconds: _date.getUTCSeconds(),\n      };\n    };\n\n    var _utc = _getUTCArray(_date);\n\n    var _jd = function () {\n      var year = _utc.year;\n      var month = _utc.month;\n      var day = _utc.day;\n      var calender = '';\n\n      if (month <= 2) {\n        var year = year - 1;\n        var month = month + 12;\n      }\n\n      var julian_day =\n        Math.floor(365.25 * (year + 4716)) +\n        Math.floor(30.6001 * (month + 1)) +\n        day -\n        1524.5;\n\n      if (calender == 'julian') {\n        var transition_offset = 0;\n      } else if (calender == 'gregorian') {\n        var tmp = Math.floor(year / 100);\n        var transition_offset = 2 - tmp + Math.floor(tmp / 4);\n      } else if (julian_day < 2299160.5) {\n        var transition_offset = 0;\n      } else {\n        var tmp = Math.floor(year / 100);\n        var transition_offset = 2 - tmp + Math.floor(tmp / 4);\n      }\n      var jd = julian_day + transition_offset;\n      return jd;\n    };\n    var _gmst = function () {\n      var rad = Math.PI / 180;\n      var time_in_sec = _utc.hours * 3600 + _utc.minutes * 60 + _utc.seconds;\n      var jd = _jd();\n      //gmst at 0:00\n      var t = (jd - 2451545.0) / 36525;\n      var gmst_at_zero =\n        (24110.5484 +\n          8640184.812866 * t +\n          0.093104 * t * t +\n          0.0000062 * t * t * t) /\n        3600;\n      if (gmst_at_zero > 24) {\n        gmst_at_zero = gmst_at_zero % 24;\n      }\n      //gmst at target time\n      var gmst = gmst_at_zero + (time_in_sec * 1.00273790925) / 3600;\n      //mean obliquity of the ecliptic\n      var e =\n        23 +\n        26.0 / 60 +\n        21.448 / 3600 -\n        (46.815 / 3600) * t -\n        (0.00059 / 3600) * t * t +\n        (0.001813 / 3600) * t * t * t;\n      //nutation in longitude\n      var omega =\n        125.04452 - 1934.136261 * t + 0.0020708 * t * t + (t * t * t) / 450000;\n      var long1 = 280.4665 + 36000.7698 * t;\n      var long2 = 218.3165 + 481267.8813 * t;\n      var phai =\n        -17.2 * Math.sin(omega * rad) -\n        -1.32 * Math.sin(2 * long1 * rad) -\n        0.23 * Math.sin(2 * long2 * rad) +\n        0.21 * Math.sin(2 * omega * rad);\n      gmst = gmst + ((phai / 15) * Math.cos(e * rad)) / 3600;\n      if (gmst < 0) {\n        gmst = (gmst % 24) + 24;\n      }\n      if (gmst > 24) {\n        gmst = gmst % 24;\n      }\n      return gmst;\n    };\n\n    return {\n      date: _date,\n      year: Number(_utc.year),\n      month: Number(_utc.month),\n      day: Number(_utc.day),\n      hours: Number(_utc.hours),\n      minutes: Number(_utc.minutes),\n      seconds: Number(_utc.seconds),\n      timezone: _date.getTimezoneOffset() / 60,\n      jd: _jd,\n      gmst: _gmst,\n    }; // end of return Orb.Time\n  }; // end of Orb.Time\n\n///////\nGST.Terminator = function (option) {\n  var shade = option.shade;\n  var boundary = option.boundary;\n  GST.Storage = GST.Storage || {};\n  GST.Storage.Terminator = GST.Storage.Terminator || [];\n  var rad = Math.PI / 180;\n\n  var _roundAngle = function (angle) {\n    if (angle > 360) {\n      angle = angle % 360;\n    } else if (angle < 0) {\n      angle = (angle % 360) + 360;\n    } else {\n      angle = angle;\n    }\n    return angle;\n  };\n\n  var _getSunPosition = function (time) {\n    var time_in_day =\n      time.hours / 24 + time.minutes / 1440 + time.seconds / 86400;\n    var jd = time.jd() + time_in_day;\n    var t = (jd - 2451545.0) / 36525;\n    //geometric_mean_longitude\n    var mean_longitude = 280.46646 + 36000.76983 * t + 0.0003032 * t * t;\n    //mean anomaly of the Sun\n    var mean_anomaly = 357.52911 + 35999.05029 * t - 0.0001537 * t * t;\n    //eccentricity of the Earth's orbit\n    var eccentricity = 0.016708634 - 0.000042037 * t - 0.0000001267 * t * t;\n    //Sun's equation of  the center\n    var equation =\n      (1.914602 - 0.004817 * t - 0.000014 * t * t) *\n      Math.sin(mean_anomaly * rad);\n    equation += (0.019993 - 0.000101 * t) * Math.sin(2 * mean_anomaly * rad);\n    equation += 0.000289 * Math.sin(3 * mean_anomaly * rad);\n    //true longitude of the Sun\n    var true_longitude = mean_longitude + equation;\n    //true anomary of the Sun\n    var true_anomary = mean_anomaly + equation;\n    //radius vector, distance between center of the Sun and the Earth\n    var radius =\n      (1.000001018 * (1 - eccentricity * eccentricity)) /\n      (1 + eccentricity * Math.cos(true_anomary * rad));\n\n    var nao = function (t) {\n      var omega =\n        (125.04452 -\n          1934.136261 * t +\n          0.0020708 * t * t +\n          (t * t + t) / 450000) *\n        rad;\n      var L0 = (280.4665 + 36000.7698 * t) * rad;\n      var L1 = (218.3165 + 481267.8813 * t) * rad;\n      var nutation =\n        (-17.2 / 3600) * Math.sin(omega) -\n        (-1.32 / 3600) * Math.sin(2 * L0) -\n        (0.23 / 3600) * Math.sin(2 * L1) +\n        ((0.21 / 3600) * Math.sin(2 * omega)) / rad;\n      var obliquity_zero =\n        23 +\n        26.0 / 60 +\n        21.448 / 3600 -\n        (46.815 / 3600) * t -\n        (0.00059 / 3600) * t * t +\n        (0.001813 / 3600) * t * t * t;\n      var obliquity_delta =\n        (9.2 / 3600) * Math.cos(omega) +\n        (0.57 / 3600) * Math.cos(2 * L0) +\n        (0.1 / 3600) * Math.cos(2 * L1) -\n        (0.09 / 3600) * Math.cos(2 * omega);\n      var obliquity = obliquity_zero + obliquity_delta;\n      return {\n        nutation: nutation,\n        obliquity: obliquity,\n      };\n    };\n    var nao = new nao(t);\n    var nutation = nao.nutation;\n    var obliquity = nao.obliquity;\n    var apparent_longitude = true_longitude + nutation;\n    var longitude = apparent_longitude;\n\n    //right asantion of the Sun\n    var ra = Math.atan2(\n      Math.cos(obliquity * rad) * Math.sin(longitude * rad),\n      Math.cos(longitude * rad)\n    );\n    ra = _roundAngle(ra / rad) / 15;\n    //declination of the Sun\n    var dec = Math.asin(Math.sin(obliquity * rad) * Math.sin(longitude * rad));\n    dec = dec / rad;\n    var distance = radius * 149597870;\n    //rectanger\n    var x = distance * Math.cos(longitude * rad);\n    var y = distance * (Math.sin(longitude * rad) * Math.cos(obliquity * rad));\n    var z = distance * (Math.sin(longitude * rad) * Math.sin(obliquity * rad));\n    return {\n      ra: ra,\n      dec: dec,\n      distance: distance,\n      x: x,\n      y: y,\n      z: z,\n    };\n  };\n\n  var _generateArray = function (time) {\n    var rad = Math.PI / 180;\n    var sun = _getSunPosition(time);\n    var sun_ra = sun.ra;\n    var sun_dec = sun.dec;\n    var gmst = time.gmst();\n    var sun_long = -(gmst * 15 - sun_ra * 15);\n    if (sun_long > 360) {\n      sun_long = sun_long % 360;\n    }\n    if (sun_long < 0) {\n      sun_long = (sun_long % 360) + 360;\n    }\n    var sun_lat = sun_dec;\n\n    if (sun_lat > 5) {\n      var polar_night_flag = 'south';\n    } else if (sun_lat < -5) {\n      var polar_night_flag = 'north';\n    } else {\n      var polar_night_flag = 'none';\n    }\n\n    var NightCircle = function (start, end, rev) {\n      var lat_array = [];\n      var lng_array = [];\n      for (var i = start; i <= end; i += 1) {\n        var delta_lat =\n          Math.asin(Math.cos(sun_lat * rad) * Math.sin(i * rad)) / rad;\n        if (Math.abs(delta_lat) < 85) {\n          var x =\n            -Math.cos(sun_long * rad) *\n              Math.sin(sun_lat * rad) *\n              Math.sin(i * rad) -\n            Math.sin(sun_long * rad) * Math.cos(i * rad);\n          var y =\n            -Math.sin(sun_long * rad) *\n              Math.sin(sun_lat * rad) *\n              Math.sin(i * rad) +\n            Math.cos(sun_long * rad) * Math.cos(i * rad);\n          var delta_long = Math.atan2(y, x) / rad;\n          if (delta_long > 360) {\n            delta_long = delta_long % 360;\n          }\n          if (delta_long < 0) {\n            delta_long = (delta_long % 360) + 360;\n          }\n          lat_array.push(delta_lat);\n          lng_array.push(delta_long);\n        }\n      }\n      if (rev == true) {\n        return {\n          lat_array: lat_array.reverse(),\n          lng_array: lng_array.reverse(),\n        };\n      } else {\n        return {\n          lat_array: lat_array,\n          lng_array: lng_array,\n        };\n      }\n    };\n    var qtr = NightCircle(0, 90, true);\n    var latitude_array_east = qtr.lat_array;\n    var longitude_array_east = qtr.lng_array;\n\n    var qtr = NightCircle(270, 360, true);\n    latitude_array_east = latitude_array_east.concat(qtr.lat_array);\n    longitude_array_east = longitude_array_east.concat(qtr.lng_array);\n\n    var qtr = NightCircle(90, 180, false);\n    var latitude_array_west = qtr.lat_array;\n    var longitude_array_west = qtr.lng_array;\n\n    var qtr = NightCircle(180, 270, false);\n    latitude_array_west = latitude_array_west.concat(qtr.lat_array);\n    longitude_array_west = longitude_array_west.concat(qtr.lng_array);\n\n    if (sun_lat < 0) {\n      latitude_array_west.reverse();\n      longitude_array_west.reverse();\n    } else if (sun_lat > 0) {\n      latitude_array_east.reverse();\n      longitude_array_east.reverse();\n    }\n    var latitude_array = latitude_array_east.concat(latitude_array_west);\n    var longitude_array = longitude_array_east.concat(longitude_array_west);\n    return {\n      latitude_array: latitude_array,\n      longitude_array: longitude_array,\n      polar_night_flag: polar_night_flag,\n    };\n  };\n\n  var splitArray = function (night_array) {\n    var trm = night_array;\n    var lng_array = trm.longitude_array;\n    var lat_array = trm.latitude_array;\n    var array_length = lng_array.length;\n    var start_lng = lng_array[0];\n    var last_lng = lng_array[array_length - 1];\n    var split_size = 90; //4 parts\n\n    if (start_lng > split_size) {\n      var first_split_point =\n        Math.floor(start_lng / split_size) * split_size + split_size;\n      if (first_split_point <= 0) {\n        first_split_point = 360;\n      }\n    } else {\n      var first_split_point = split_size;\n    }\n    var last_split_point =\n      Math.floor(last_lng / split_size) * split_size + split_size;\n\n    var split_latitude = function (lat1, lng1, lat2, lng2, split_lng) {\n      if (split_lng == 360) {\n        var offset = 360;\n      } else {\n        var offset = 0;\n      }\n      var split_lat =\n        lat1 + (split_lng - lng1) * ((lat2 - lat1) / (lng2 + offset - lng1));\n      return split_lat;\n    };\n\n    var splitted_lng_array = [];\n    var splitted_lat_array = [];\n\n    var split_latlng_array = function (start, end, split_count, next) {\n      for (var sp = start; sp <= end; sp = sp + split_size) {\n        splitted_lng_array[split_count] = [];\n        splitted_lat_array[split_count] = [];\n        for (var i = next; i < array_length; i++) {\n          if (sp > lng_array[i] && sp - split_size < lng_array[i]) {\n            splitted_lng_array[split_count].push(lng_array[i]);\n            splitted_lat_array[split_count].push(lat_array[i]);\n          } else {\n            var spl_lat = split_latitude(\n              lat_array[i - 1],\n              lng_array[i - 1],\n              lat_array[i],\n              lng_array[i],\n              sp\n            );\n            splitted_lng_array[split_count].push(sp);\n            splitted_lat_array[split_count].push(spl_lat);\n            next = i;\n            split_count++;\n            break;\n          }\n        }\n      }\n      return {\n        splitted_lng_array: splitted_lng_array,\n        splitted_lat_array: splitted_lat_array,\n        split_point: sp,\n        split_count: split_count,\n        next: next,\n      };\n    };\n\n    if (start_lng < last_lng) {\n      var sp = new split_latlng_array(\n        first_split_point,\n        last_split_point,\n        0,\n        0\n      );\n    } else {\n      var sp = new split_latlng_array(first_split_point, 360, 0, 0);\n      sp = new split_latlng_array(\n        split_size,\n        last_split_point,\n        sp.split_count,\n        sp.next\n      );\n    }\n\n    var splitted_lng_array = sp.splitted_lng_array;\n    var splitted_lat_array = sp.splitted_lat_array;\n\n    var sp_length = splitted_lng_array.length;\n    for (var i = 1; i < sp_length; i++) {\n      var last_lng =\n        splitted_lng_array[i - 1][splitted_lng_array[i - 1].length - 1];\n      var last_lat =\n        splitted_lat_array[i - 1][splitted_lat_array[i - 1].length - 1];\n      if (last_lng == 360) {\n        last_lng = 0;\n      }\n      splitted_lng_array[i].unshift(last_lng);\n      splitted_lat_array[i].unshift(last_lat);\n    }\n    return {\n      splitted_lng_array: splitted_lng_array,\n      splitted_lat_array: splitted_lat_array,\n    };\n  };\n\n  var _getTerminator = function (time) {\n    var night_array = _generateArray(time);\n    var splitted_array = splitArray(night_array);\n    var splitted_lng_array = splitted_array.splitted_lng_array;\n    var splitted_lat_array = splitted_array.splitted_lat_array;\n    var polar_night_flag = night_array.polar_night_flag;\n\n    //Generate Porygon Array\n    if (polar_night_flag == 'north') {\n      var lat_limit = 85;\n    } else if (polar_night_flag == 'south') {\n      var lat_limit = -85;\n    }\n\n    var _nightPathFactory = function (lng_array, lat_array, start_lat) {\n      var polygon = [];\n      var polyline = [];\n      var lng_array_length = lng_array.length;\n      var lat_array_length = lat_array.length;\n      if (lng_array[0] > 180) {\n        var true_lng = lng_array[0] - 360;\n      } else {\n        var true_lng = lng_array[0];\n      }\n      if (true_lng < 0) {\n        lat_array.reverse();\n        lng_array.reverse();\n      }\n      if (lng_array_length > 0) {\n        if (polar_night_flag != 'none') {\n          polygon.push([lat_limit, lng_array[0]]);\n        }\n        polygon.push([start_lat, lng_array[0]]);\n        for (var i = 0; i < lat_array_length; i++) {\n          polygon.push([lat_array[i], lng_array[i]]);\n          polyline.push([lat_array[i], lng_array[i]]);\n        }\n        polygon.push([start_lat, lng_array[lng_array_length - 1]]);\n\n        if (polar_night_flag != 'none') {\n          polygon.push([lat_limit, lng_array[lng_array_length - 1]]);\n        }\n        polygon.push(polygon[0]);\n        if (\n          lat_array[lat_array_length - 1] == lat_array[lat_array_length - 2] &&\n          lng_array[lng_array_length - 1] != lng_array[lng_array_length - 2]\n        ) {\n          polyline.pop();\n        }\n        if (lat_array[0] == lat_array[1] && lng_array[0] != lng_array[1]) {\n          polyline.shift();\n        }\n      }\n      return {\n        polygon: polygon,\n        polyline: polyline,\n      };\n    };\n\n    var night_polygon_array = [];\n    var night_polyline_array = [];\n    var start_lat = splitted_lat_array[0][0];\n    var al = splitted_lng_array.length;\n    for (var j = 0; j < al; j++) {\n      var p = new _nightPathFactory(\n        splitted_lng_array[j],\n        splitted_lat_array[j],\n        start_lat\n      );\n      night_polygon_array[j] = p.polygon;\n      night_polyline_array[j] = p.polyline;\n    }\n    if (shade) {\n      return night_polygon_array;\n      // GST.Storage.NightPorigon = [];\n      // for (var k1 = 0, npl1 = night_polygon_array.length; k1 < npl1; k1++) {\n      //   GST.Storage.NightPorigon[k1] = new google.maps.Polygon({\n      //     paths: night_polygon_array[k1],\n      //     strokeColor: '#000000',\n      //     strokeOpacity: 1,\n      //     strokeWeight: 0,\n      //     fillColor: '#000000',\n      //     fillOpacity: 0.35,\n      //     clickable: false,\n      //     zIndex: 101,\n      //   });\n      //   GST.Storage.NightPorigon[k1].setMap(map);\n      // }\n    }\n    if (boundary) {\n      return night_polyline_array;\n      // GST.Storage.NightBoundaryPolyline = [];\n      // for (var k2 = 0, npl2 = night_polyline_array.length; k2 < npl2; k2++) {\n      //   GST.Storage.NightBoundaryPolyline[k2] = new google.maps.Polyline({\n      //     path: night_polyline_array[k2],\n      //     strokeColor: '#000000',\n      //     strokeOpacity: 0.5,\n      //     strokeWeight: 2,\n      //     zIndex: 102,\n      //   });\n      //   GST.Storage.NightBoundaryPolyline[k2].setMap(map);\n      // }\n    }\n  };\n\n  var _removeTerminator = function () {\n    if (shade) {\n      for (\n        var i = 0, data_length = GST.Storage.NightPorigon.length;\n        i < data_length;\n        i++\n      ) {\n        GST.Storage.NightPorigon[i].setMap(null);\n      }\n    }\n    if (boundary) {\n      for (\n        var i = 0, data_length = GST.Storage.NightBoundaryPolyline.length;\n        i < data_length;\n        i++\n      ) {\n        GST.Storage.NightBoundaryPolyline[i].setMap(null);\n      }\n    }\n  };\n\n  return {\n    get: function (date) {\n      var time = new GST.Time(date);\n      return _getTerminator(time);\n    },\n    remove: function () {\n      _removeTerminator();\n    },\n    update: function (date) {\n      _removeTerminator();\n      var time = new GST.Time(date);\n      return _getTerminator(time);\n    },\n  }; // end GST.Terminator return\n};\n\nconst getNightPaths = (date) => {\n  const terminator_options = {\n    shade: true,\n    boundary: false,\n  };\n  const terminator = new GST.Terminator(terminator_options);\n\n  const LatLongPaths = terminator.get(date);\n  // console.log(LatLongPaths[2]);\n  return LatLongPaths.map((paths) => {\n    return paths.map((coord) => wrap(coord[0], coord[1]));\n    // return paths.map((coord) => [coord[1], coord[0]]);\n  });\n};\n\n/**\n * Source: https://gist.github.com/missinglink/d0a085188a8eab2ca66db385bb7c023a\n  normalize co-ordinates that lie outside of the normal ranges.\n  longitude wrapping simply requires adding +- 360 to the value until it comes\n  in to range.\n  for the latitude values we need to flip the longitude whenever the latitude\n  crosses a pole.\n**/\n\nconst wrap = (lat, lon) => {\n  var point = { lat: lat, lon: lon };\n  var quadrant = Math.floor(Math.abs(lat) / 90) % 4;\n  var pole = lat > 0 ? 90 : -90;\n  var offset = lat % 90;\n\n  switch (quadrant) {\n    case 0:\n      point.lat = offset;\n      break;\n    case 1:\n      point.lat = pole - offset;\n      point.lon += 180;\n      break;\n    case 2:\n      point.lat = -offset;\n      point.lon += 180;\n      break;\n    case 3:\n      point.lat = -pole + offset;\n      break;\n  }\n\n  if (point.lon > 180 || point.lon < -180) {\n    point.lon -= Math.floor((point.lon + 180) / 360) * 360;\n  }\n  // console.log([point.lat, point.lon]);\n  return [point.lon, point.lat];\n};\n\nconst getTimeExtent = (now) => {\n  const setDate = moment(now);\n  const tomorrow = setDate.add(1, 'day').endOf('day').toDate();\n  const yesterday = setDate.subtract(2, 'day').startOf('day').toDate();\n\n  return {\n    tomorrow,\n    yesterday,\n  };\n};\n\nconst generateCones = async (now, graphicsLayer, opacity) => {\n  const [Graphic, Polygon, geodesicUtils, normalizeUtils, webMercatorUtils] =\n    await loadModules(\n      [\n        'esri/Graphic',\n        'esri/geometry/Polygon',\n        'esri/geometry/support/geodesicUtils',\n        'esri/geometry/support/normalizeUtils',\n        'esri/geometry/support/webMercatorUtils',\n      ],\n      {\n        css: true,\n      }\n    );\n\n  const nightPaths = getNightPaths(now);\n\n  nightPaths.forEach(async (path) => {\n    const polygon = new Polygon({\n      rings: path,\n    });\n\n    const simpleFillSymbol = {\n      type: 'simple-fill',\n      color: [0, 0, 0, opacity],\n      outline: {\n        color: [0, 0, 0, opacity],\n        width: 0,\n      },\n    };\n\n    let geom = geodesicUtils.geodesicDensify(polygon, 1000000);\n    const mercatorPolygon = webMercatorUtils.geographicToWebMercator(geom);\n\n    const geom2 = await normalizeUtils.normalizeCentralMeridian(\n      mercatorPolygon\n    );\n\n    const polygonGraphic = new Graphic({\n      geometry: geom2[0],\n      symbol: simpleFillSymbol,\n    });\n    graphicsLayer.add(polygonGraphic);\n  });\n};\n\nexport { getNightPaths, wrap, getTimeExtent, generateCones };\n","// store.js\nimport React, { createContext, useReducer } from 'react';\n\nconst initialState = {\n  date: new Date(),\n};\nconst store = createContext(initialState);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'SET_DATE':\n        return { ...state, date: action.data };\n      default:\n        throw new Error();\n    }\n  }, initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };\n","import React, { useEffect, useRef, useState, useContext } from 'react';\nimport { loadModules } from 'esri-loader';\nimport { TwitterFollowButton } from 'react-twitter-embed';\nimport { getTimeExtent } from '../../helpers/helpers';\nimport { Layout, DatePicker, Row, Col } from 'antd';\nimport { store } from '../../store/store';\nimport moment from 'moment';\nimport './Controller.css';\n\nconst { Header, Content, Footer } = Layout;\n\nconst onChange = (date, timeSlider, dispatch) => {\n  if (date !== null) {\n    const { tomorrow, yesterday } = getTimeExtent(date.toDate());\n    timeSlider.fullTimeExtent = {\n      start: yesterday,\n      end: tomorrow,\n    };\n    timeSlider.timeExtent = {\n      start: date.toDate(),\n      end: date.toDate(),\n    };\n    dispatch({ type: 'SET_DATE', data: date.toDate() });\n  }\n};\n\nconst Controller = ({ dispatch, view, now }) => {\n  const daylightRef = useRef();\n  let [timeSlider, setTimeSlider] = useState(null);\n  useEffect(() => {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    async function loadWidgets() {\n      const [TimeSlider] = await loadModules(['esri/widgets/TimeSlider'], {\n        css: true,\n      });\n      const { tomorrow, yesterday } = getTimeExtent(now);\n\n      if (view) {\n      }\n      timeSlider = new TimeSlider({\n        view: view,\n        container: daylightRef.current,\n        loop: true,\n        layout: 'compact',\n        mode: 'instant',\n        timeVisible: true,\n        stops: {\n          interval: {\n            value: 1,\n            unit: 'hours',\n          },\n        },\n        fullTimeExtent: {\n          start: yesterday,\n          end: tomorrow,\n        },\n        timeExtent: {\n          start: now,\n          end: now,\n        },\n      });\n\n      timeSlider.watch('timeExtent', (timeExtent) => {\n        dispatch({ type: 'SET_DATE', data: new Date(timeExtent.start) });\n      });\n      setTimeSlider(timeSlider);\n    }\n    loadWidgets();\n  }, []);\n\n  return (\n    <>\n      <Layout>\n        <Header className=\"headerTitle\">Day and Night</Header>\n        <Layout>\n          <Content>\n            <div ref={daylightRef}></div>\n          </Content>\n        </Layout>\n        <Footer>\n          <Row className=\"footer\">\n            <Col\n              xs={{ span: 24 }}\n              sm={{ span: 24 }}\n              md={{ span: 24 }}\n              lg={{ span: 12 }}\n              xl={{ span: 12 }}\n            >\n              <DatePicker\n                onChange={(date) => onChange(date, timeSlider, dispatch)}\n                className=\"footerContent datePicker\"\n                defaultValue={moment()}\n              />\n            </Col>\n            <Col\n              xs={{ span: 24 }}\n              sm={{ span: 24 }}\n              md={{ span: 24 }}\n              lg={{ span: 12 }}\n              xl={{ span: 12 }}\n            >\n              <div className=\"footerContent twitterButton\">\n                <TwitterFollowButton\n                  screenName={'ialixandroae'}\n                  options={{ showCount: false }}\n                />\n              </div>\n            </Col>\n          </Row>\n        </Footer>\n      </Layout>\n    </>\n  );\n};\n\nexport default Controller;\n","import React, { useEffect, useRef, useContext, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { loadModules } from 'esri-loader';\nimport { generateCones } from '../../helpers/helpers';\nimport { store } from '../../store/store';\nimport Controller from '../controller/Controller';\n\nexport const MapView = () => {\n  const globalState = useContext(store);\n  const { dispatch } = globalState;\n\n  const mapRef = useRef();\n  const [mapView, setView] = useState(null);\n  let [graphicsLayer, setGraphicsLayer] = useState(null);\n\n  const now = globalState.state.date;\n\n  useEffect(() => {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    async function loadWebScene() {\n      const [Map, MapView, GraphicsLayer, Expand] = await loadModules(\n        [\n          'esri/Map',\n          'esri/views/MapView',\n          'esri/layers/GraphicsLayer',\n          'esri/widgets/Expand',\n        ],\n        {\n          css: true,\n        }\n      );\n\n      graphicsLayer = new GraphicsLayer();\n\n      await generateCones(now, graphicsLayer, 0.3);\n\n      const map = new Map({\n        basemap: 'topo-vector',\n      });\n      map.add(graphicsLayer);\n\n      const view = new MapView({\n        container: mapRef.current,\n        map: map,\n        zoom: 2,\n      });\n\n      var node = document.createElement('div');\n      ReactDOM.render(\n        <Controller dispatch={dispatch} view={view} now={now} />,\n        node\n      );\n\n      let expand = new Expand({\n        view: view,\n        content: node,\n      });\n      view.ui.add(expand, 'top-right');\n\n      setView(view);\n      setGraphicsLayer(graphicsLayer);\n\n      return () => {\n        if (view) {\n          // destroy the map view\n          view.container = null;\n        }\n      };\n    }\n    loadWebScene();\n  }, []);\n\n  useEffect(() => {\n    if (mapView) {\n      graphicsLayer.removeAll();\n      async function recreateCones() {\n        await generateCones(globalState.state.date, graphicsLayer, 0.3);\n      }\n      recreateCones();\n    }\n  }, [globalState.state.date]);\n\n  return <div style={{ height: '100%', width: '100%' }} ref={mapRef} />;\n};\n","import React, { useEffect, useRef, useContext, useState } from 'react';\nimport { loadModules } from 'esri-loader';\nimport { generateCones } from '../../helpers/helpers';\nimport { store } from '../../store/store';\n\nexport const SceneView = () => {\n  const globalState = useContext(store);\n\n  const sceneRef = useRef();\n  const [sceneView, setView] = useState(null);\n  let [graphicsLayer, setGraphicsLayer] = useState(null);\n\n  const now = globalState.state.date;\n\n  useEffect(() => {\n    // lazy load the required ArcGIS API for JavaScript modules and CSS\n    async function loadWebScene() {\n      const [Map, SceneView, GraphicsLayer, Expand, BasemapGallery] =\n        await loadModules(\n          [\n            'esri/Map',\n            'esri/views/SceneView',\n            'esri/layers/GraphicsLayer',\n            'esri/widgets/Expand',\n            'esri/widgets/BasemapGallery',\n          ],\n          {\n            css: true,\n          }\n        );\n\n      graphicsLayer = new GraphicsLayer();\n      await generateCones(now, graphicsLayer, 0.7);\n\n      const map = new Map({\n        basemap: 'satellite',\n      });\n      map.add(graphicsLayer);\n\n      const view = new SceneView({\n        container: sceneRef.current,\n        map: map,\n      });\n\n      setView(view);\n      setGraphicsLayer(graphicsLayer);\n\n      let basemapGallery = new BasemapGallery({\n        view: view,\n      });\n\n      let expand = new Expand({\n        view: view,\n        content: basemapGallery,\n      });\n      view.ui.add(expand, 'top-right');\n\n      return () => {\n        if (view) {\n          // destroy the map view\n          view.container = null;\n        }\n      };\n    }\n    loadWebScene();\n  }, []);\n\n  useEffect(() => {\n    if (sceneView) {\n      graphicsLayer.removeAll();\n      async function recreateCones() {\n        await generateCones(globalState.state.date, graphicsLayer, 0.7);\n      }\n      recreateCones();\n    }\n  }, [globalState.state.date]);\n\n  return <div style={{ height: '100%', width: '100%' }} ref={sceneRef} />;\n};\n","import React from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport { MapView } from '../map/Map';\nimport { SceneView } from '../scene/Scene';\nimport './Main.css';\n\nconst { Content } = Layout;\n\nfunction Main() {\n  return (\n    <Layout>\n      <Content>\n        <Row gutter={[0, 0]}>\n          <Col\n            xs={{ span: 24 }}\n            sm={{ span: 24 }}\n            md={{ span: 24 }}\n            lg={{ span: 12 }}\n            xl={{ span: 12 }}\n            className=\"leftCol\"\n          >\n            <MapView />\n          </Col>\n          <Col\n            xs={{ span: 24 }}\n            sm={{ span: 24 }}\n            md={{ span: 24 }}\n            lg={{ span: 12 }}\n            xl={{ span: 12 }}\n            className=\"rightCol\"\n          >\n            <SceneView />\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./components/main/Main\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { StateProvider } from \"./store/store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}